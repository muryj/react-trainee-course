{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseDate","title","amount","date","Date","onSaveExpanseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4469d5b.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nexport default function ExpenseForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseDate = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpanseData(expenseDate);\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__controls\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            value={enteredAmount}\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            value={enteredDate}\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={props.onCancel} type=\"button\">\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n}\n","import { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nexport default function NewExpense(props) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpanseData = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onCancel={stopEditingHandler}\n          onSaveExpanseData={saveExpanseData}\n        />\n      )}\n    </div>\n  );\n}\n","import \"./Card.css\";\n\nexport default function Card(props) {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n}\n","import \"./ExpensesFilter.css\";\n\nexport default function ExpensesFilter(props) {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n","import \"./ExpenseDate.css\";\n\nexport default function ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  // console.log(props.date);\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n","import ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nexport default function ExpenseItem(props) {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nexport default function ExpensesList(props) {\n  if (props.items.length === 0) {\n    return <p className=\"expenses-list__fallback\">Found no expenses.</p>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          className=\"expenses-list\"\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n}\n","import \"./ChartBar.css\";\n\nexport default function ChartBar(props) {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"char-bar__label\">{props.label}</div>\n    </div>\n  );\n}\n","import ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nexport default function Chart(props) {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n}\n","import Chart from \"../Chart/Chart\";\n\nexport default function ExpensesChart(props) {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n}\n","import { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport \"./Expenses.css\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nexport default function Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(\n    (expense) => expense.date.getFullYear().toString() === filteredYear\n  );\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nexport default function App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}